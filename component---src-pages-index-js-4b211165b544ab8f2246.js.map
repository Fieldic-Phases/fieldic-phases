{"version":3,"file":"component---src-pages-index-js-4b211165b544ab8f2246.js","mappings":"4MAGaA,GAAS,UAETC,EAAS,CAClBC,SAAU,CACNC,MAAO,WACH,OAAO,gBAAC,EAAAC,EAAD,CAAaC,IAAK,wBAAlB,uBAEXC,YAAa,qBACbC,MAAO,YAEXC,KAAM,CACFL,MAAO,WACH,OAAO,gBAAC,EAAAC,EAAD,CAAaC,IAAK,oBAAlB,uBAEXC,YAAa,iBACbC,MAAO,QAEXE,IAAK,CACDN,MAAO,WACH,OAAO,gBAAC,EAAAC,EAAD,CAAaC,IAAK,mBAAlB,uBAEXC,YAAa,gBACbC,MAAO,gBAEXG,OAAQ,CACJP,MAAO,WACH,OAAO,gBAAC,EAAAC,EAAD,CAAaC,IAAK,sBAAlB,uBAEXC,YAAa,mBACbC,MAAO,UAEXI,MAAO,CACHR,MAAO,WACH,OAAO,gBAAC,EAAAC,EAAD,CAAaC,IAAK,sBAAlB,uBAEXC,YAAa,0BACbC,MAAO,kBAEXK,OAAQ,CACJT,MAAO,WACH,OAAO,gBAAC,EAAAC,EAAD,CAAaC,IAAK,sBAAlB,uBAEXE,MAAO,SACPD,YAAa,oBAEjBO,OAAQ,CACJV,MAAO,WACH,OAAO,gBAAC,EAAAC,EAAD,CAAaC,IAAK,uBAAlB,uBAEXE,MAAO,SACPD,YAAa,qBAIRQ,EAAQ,CACjB,CACIC,IAAK,WACLC,OAAQ,GAEZ,CACID,IAAK,OACLC,OAAQ,GAEZ,CACID,IAAK,SACLC,OAAQ,GAEZ,CACID,IAAK,MACLC,OAAQ,GAEZ,CACID,IAAK,SACLC,OAAQ,GAEZ,CACID,IAAK,QACLC,OAAQ,GAEZ,CACID,IAAK,SACLC,OAAQ,ICjFVC,EAAwB,EAAfH,EAAMI,OAERC,EAAmB,SAACC,EAAMpB,GACnC,IACMqB,EADYC,KAAKC,OAAOH,EAAOpB,GAJ5B,OAKsBiB,EACzBO,EAAeH,EAAaC,KAAKC,MAAMF,GACvCI,EAAeD,EAAeV,EAAMI,OAG1C,MAAO,CACHM,aAAAA,EACAC,aAAAA,EACAC,UALa,OAAIZ,GAAOa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEZ,OAASa,EAAEb,UAAQM,KAAKC,MAAME,IAAeV,MCQjFe,EAAa,WACtB,IAfiBC,EAAOC,EAClBC,EACAC,EAEAC,EACAC,EAEAC,EASAC,GAAQ,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GAClD,GAAkCC,EAAAA,EAAAA,UAASJ,GAApCK,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,UAASJ,GAAhCO,EAAP,KAAgBC,EAAhB,KAEA,OACI,gCACI,yBAAOC,IAAK,cAAZ,QACA,yBACIC,KAAM,OACNC,GAAG,aACHC,MAAOP,EACPP,IAZI,aAaJe,SAAU,SAACC,GACPR,EAAaQ,EAAEC,OAAOH,UAI9B,yBAAOH,IAAK,YAAZ,MACA,yBACIC,KAAM,OACNC,GAAG,WACHC,MAAOL,EACPT,IAAKO,EACLQ,SAAU,SAACC,GACPN,EAAWM,EAAEC,OAAOH,UAI5B,6BACI,0BACI,kCACA,oCAGAI,OAlDCvB,EAkDiBY,EAlDVX,EAkDqBa,EAjDvCZ,EAAI,IAAIM,KAAKR,GAAOwB,UACpBrB,EAAI,IAAIK,KAAKP,GAAKuB,UAElBpB,EAAMb,KAAKa,IAAIF,EAAGC,GAClBE,EAAMd,KAAKc,IAAIH,EAAGC,GAElBG,EAAOf,KAAKC,OAAOY,EAAMC,GAAP,OAAuC,EAE/DoB,QAAQC,IAAI,CAAC1B,MAAAA,EAAOC,IAAAA,EAAKG,IAAAA,EAAKC,IAAAA,EAAKC,KAAAA,IAE5BA,IAuCgDqB,KAAK,GAAGC,KAAI,SAACC,EAAGC,GACnD,IAAMC,EAAM,IAAIvB,KAAKI,GAAWY,UAAa,OAAsBM,EAAI,GACjEE,EAAO,IAAIxB,KAAKuB,GACfpC,EAAYP,EAAiB4C,EAAKR,UAAWvD,GAA7C0B,SAEP,OAAQ,0BACA,0BAAKqC,EAAKvB,cAAcC,MAAM,KAAK,IACnC,0BAAKxC,EAAOyB,GAAUnB,cCvDhDyD,EAAa,CACjBC,MAAO,UACPC,QAAS,GACTC,WAAY,4CA0Bd,EArBkB,WAChB,IAAM1C,EAAexB,EAAOkB,EAAiBoB,KAAK6B,MAAOpE,GAAO0B,UAEhE,OACE,wBAAM2C,MAAOL,GACZ,+CACC,+BACKvC,EAAatB,QAChB,kDAA0BsB,EAAalB,MAAvC,KACA,yBAAIkB,EAAanB,cAEnB,+BACE,+BACE,iEACA,gBAACwB,EAAD,W","sources":["webpack://the-fieldic-phases/./src/constants.js","webpack://the-fieldic-phases/./src/compute-phase.js","webpack://the-fieldic-phases/./src/components/phase-table.js","webpack://the-fieldic-phases/./src/pages/index.js"],"sourcesContent":["import {StaticImage} from \"gatsby-plugin-image\";\nimport * as React from \"react\"\n\nexport const epoch = -770947200000; // jim davis' birthday\n\nexport const phases = {\n    garfield: {\n        image: () => {\n            return <StaticImage src={\"./images/garfield.jpg\"}/>\n        },\n        description: \"The garfield phase\",\n        title: \"Garfield\"\n    },\n    odie: {\n        image: () => {\n            return <StaticImage src={\"./images/odie.png\"}/>\n        },\n        description: \"The odie phase\",\n        title: \"Odie\"\n    },\n    jon: {\n        image: () => {\n            return <StaticImage src={\"./images/jon.png\"}/>\n        },\n        description: \"The jon phase\",\n        title: \"Jon Arbuckle\"\n    },\n    nermal: {\n        image: () => {\n            return <StaticImage src={\"./images/nermal.jpg\"}/>\n        },\n        description: \"The nermal phase\",\n        title: \"Nermal\"\n    },\n    drliz: {\n        image: () => {\n            return <StaticImage src={\"./images/drliz.jpeg\"}/>\n        },\n        description: \"The Dr Liz Wilson phase\",\n        title: \"Dr. Liz Wilson\"\n    },\n    arlene: {\n        image: () => {\n            return <StaticImage src={\"./images/arlene.png\"}/>\n        },\n        title: \"Arlene\",\n        description: \"The Arlene phase\"\n    },\n    pookie: {\n        image: () => {\n            return <StaticImage src={\"./images/pookie.jpeg\"}/>\n        },\n        title: \"Pookie\",\n        description: \"The pookie phase\"\n    }\n};\n\nexport const PHASE = [\n    {\n        key: \"garfield\",\n        number: 0\n    },\n    {\n        key: \"odie\",\n        number: 4\n    },\n    {\n        key: \"nermal\",\n        number: 1\n    },\n    {\n        key: \"jon\",\n        number: 2\n    },\n    {\n        key: \"arlene\",\n        number: 3\n    },\n    {\n        key: \"drliz\",\n        number: 5\n    },\n    {\n        key: \"pookie\",\n        number: 6\n    }\n];\n","import {PHASE} from \"./constants\";\n\nconst DAYS = 1000 * 60 * 60 * 24;\nconst PERIOD = PHASE.length * 2;\n\nexport const computePhaseData = (from, epoch) => {\n    const daysSince = Math.floor((from - epoch) / DAYS);\n    const fullCycles = daysSince / PERIOD;\n    const currentCycle = fullCycles - Math.floor(fullCycles);\n    const currentPhase = currentCycle * PHASE.length;\n    const phaseKey = [...PHASE].sort((a, b) => a.number - b.number)[Math.floor(currentPhase)].key;\n\n    return {\n        currentCycle,\n        currentPhase,\n        phaseKey\n    }\n};\n","import React, {useState} from \"react\"\nimport {computePhaseData} from \"../compute-phase\";\nimport {epoch, phases} from \"../constants\";\n\nconst daysBetween = (start, end) => {\n    const s = new Date(start).getTime();\n    const e = new Date(end).getTime();\n\n    const max = Math.max(s, e);\n    const min = Math.min(s, e);\n\n    const days = Math.floor((max - min) / (1000 * 60 * 60 * 24)) + 1;\n\n    console.log({start, end, max, min, days});\n\n    return days;\n};\n\nexport const PhaseTable = () => {\n    const minDate = \"1945-07-28\";\n    const today = new Date().toISOString().split(\"T\")[0];\n    const [startDate, setStartDate] = useState(today);\n    const [endDate, setEndDate] = useState(today);\n\n    return (\n        <>\n            <label for={'start-date'}>From</label>\n            <input\n                type={'date'}\n                id=\"start-date\"\n                value={startDate}\n                min={minDate}\n                onChange={(x) => {\n                    setStartDate(x.target.value);\n                }}\n            />\n\n            <label for={'end-date'}>To</label>\n            <input\n                type={'date'}\n                id=\"end-date\"\n                value={endDate}\n                min={startDate}\n                onChange={(x) => {\n                    setEndDate(x.target.value);\n                }}\n            />\n\n            <table>\n                <tr>\n                    <th>Date</th>\n                    <th>Phase</th>\n                </tr>\n                {\n                    Array(daysBetween(startDate, endDate)).fill(0).map((_, idx) => {\n                        const day = new Date(startDate).getTime() + (24 * 60 * 60 * 1000)*(idx-1);\n                        const next = new Date(day);\n                        const {phaseKey} = computePhaseData(next.getTime(), epoch);\n\n                        return (<tr>\n                                <td>{next.toISOString().split(\"T\")[0]}</td>\n                                <td>{phases[phaseKey].title}</td>\n                            </tr>\n                        )\n                    })\n                }\n            </table>\n        </>\n    )\n};\n","import * as React from \"react\"\nimport { StaticImage, GatsbyImage } from \"gatsby-plugin-image\"\nimport {PhaseTable} from \"../components/phase-table\";\nimport {epoch, phases} from \"../constants\";\nimport {computePhaseData} from \"../compute-phase\";\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n};\n\n\n// markup\nconst IndexPage = () => {\n  const currentPhase = phases[computePhaseData(Date.now(), epoch).phaseKey];\n\n  return (\n    <main style={pageStyles}>\n     <h1>The Fieldic Phase</h1>\n      <section>\n          {currentPhase.image()}\n        <h2>The current phase is {currentPhase.title}.</h2>\n        <p>{currentPhase.description}</p>\n      </section>\n      <section>\n        <details>\n          <summary>Past and Future Fieldic Phases</summary>\n          <PhaseTable/>\n        </details>\n      </section>\n    </main>\n  )\n};\n\nexport default IndexPage\n"],"names":["epoch","phases","garfield","image","S","src","description","title","odie","jon","nermal","drliz","arlene","pookie","PHASE","key","number","PERIOD","length","computePhaseData","from","fullCycles","Math","floor","currentCycle","currentPhase","phaseKey","sort","a","b","PhaseTable","start","end","s","e","max","min","days","today","Date","toISOString","split","useState","startDate","setStartDate","endDate","setEndDate","for","type","id","value","onChange","x","target","Array","getTime","console","log","fill","map","_","idx","day","next","pageStyles","color","padding","fontFamily","now","style"],"sourceRoot":""}